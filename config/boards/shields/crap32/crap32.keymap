/*
 * Copyright (c) 2021 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/outputs.h>

/ {
    macros {
        mo_BT: mo_BT {
            label = "ZM_mo_BT";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <0>;
            tap-ms = <0>;
            bindings
                = <&macro_tap &rgb_ug RGB_COLOR_HSB(80,100,3)>
                , <&macro_press &mo 1>
                , <&macro_pause_for_release>
                , <&macro_tap &rgb_ug RGB_COLOR_HSB(15,95,2)>
                , <&macro_release &mo 1>
                ;
        };
    };

    combos {
        compatible = "zmk,combos";
        combo_BOOT {
            timeout-ms = <60>;
            key-positions = <28 29>;
            bindings = <&bootloader>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        // This is a sample keymap intended to be replaced with your own
        base_layer {
            bindings = <
                &kp Q   &kp W   &kp F   &kp P   &kp B          &kp J     &kp L     &kp U     &kp Y     &kp Z
                &kp A   &kp R   &kp S   &kp T   &kp G          &kp M     &kp N     &kp E     &kp I     &kp O
                        &kp X   &kp C   &kp D   &kp V          &kp K     &kp H     &kp COMMA &kp DOT
                                        &mo_BT  &mt LSHFT BSPC &kp SPACE &kp ENTER
            >;
        };

        bt_layer {
            bindings = <
                &bt BT_SEL 4 &bt BT_SEL 3 &bt BT_SEL 2 &bt BT_SEL 1 &bt BT_SEL 0    &kp J     &kp L     &kp U     &kp Y     &kp Z
                &bt BT_CLR   &kp END      &kp UP       &kp HOME     &rgb_ug RGB_TOG &kp M     &kp N     &kp E     &kp I     &kp O
                             &kp RIGHT    &kp DOWN     &kp LEFT     &rgb_ug RGB_EFF &kp K     &kp H     &kp COMMA &kp DOT
                                                       &trans       &out OUT_TOG    &kp SPACE &kp ENTER
            >;
        };
    };
};
